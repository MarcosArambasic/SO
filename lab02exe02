#include <fcntl.h>   // Inclui as definições para open e suas flags 
#include <unistd.h>  // Inclui as definições para read, write e close 
#include <stdio.h>   // Inclui as definições para printf

#define BUFFER_SIZE 128

int main() {
    int fd;                  // Descriptor de arquivo
    char buffer[BUFFER_SIZE]; // Buffer para ler o conteúdo do arquivo
    ssize_t bytesRead;       // Número de bytes lidos
    int lineCount = 0;       // Contador de linhas
    int i;                   // Índice para iterar pelo buffer

    // Abrir o arquivo em modo leitura
    fd = open("lab2_ex2.txt", O_RDONLY);
    if (fd == -1) {
        perror("Erro ao abrir o arquivo");
        return 1;
    }

    // Ler o conteúdo do arquivo em partes
    while ((bytesRead = read(fd, buffer, BUFFER_SIZE)) > 0) {
        // Contar o número de quebras de linha no buffer
        for (i = 0; i < bytesRead; i++) {
            if (buffer[i] == '\n') {
                lineCount++;
            }
        }
    }

    // Verificar se houve erro na leitura
    if (bytesRead == -1) {
        perror("Erro ao ler o arquivo");
        close(fd);
        return 1;
    }

    // Se o arquivo não estiver vazio, contar a última linha
    if (bytesRead == 0 && lineCount == 0) {
        lineCount = 1; // Considera o caso onde o arquivo tem conteúdo mas não termina com uma nova linha
    }

    // Exibir o número total de linhas
    printf("Número total de linhas: %d\n", lineCount);

    // Fechar o arquivo
    if (close(fd) == -1) {
        perror("Erro ao fechar o arquivo");
        return 1;
    }

    return 0;
}
