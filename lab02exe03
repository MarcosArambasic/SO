#include <fcntl.h>   // Inclui as definições para open e suas flags 
#include <unistd.h>  // Inclui as definições para read, write e close 
#include <stdio.h>   // Inclui as definições para printf

#define BUFFER_SIZE 128

int main() {
    int fdSrc, fdDest;           // Descritores de arquivos
    char buffer[BUFFER_SIZE];    // Buffer para ler e escrever conteúdo
    ssize_t bytesRead, bytesWritten; // Número de bytes lidos e escritos

    // Abrir o arquivo de origem em modo leitura
    fdSrc = open("lab2_ex3_origem.txt", O_RDONLY);
    if (fdSrc == -1) {
        perror("Erro ao abrir o arquivo de origem");
        return 1;
    }

    // Abrir ou criar o arquivo de destino em modo escrita
    fdDest = open("lab2_ex3_destino.txt", O_WRONLY | O_CREAT | O_TRUNC, 0644);
    if (fdDest == -1) {
        perror("Erro ao abrir ou criar o arquivo de destino");
        close(fdSrc); // Fechar o arquivo de origem antes de sair
        return 1;
    }

    // Ler o conteúdo do arquivo de origem e escrever no arquivo de destino
    while ((bytesRead = read(fdSrc, buffer, BUFFER_SIZE)) > 0) {
        // Escrever no arquivo de destino
        bytesWritten = write(fdDest, buffer, bytesRead);
        if (bytesWritten != bytesRead) {
            perror("Erro ao escrever no arquivo de destino");
            close(fdSrc);
            close(fdDest);
            return 1;
        }
    }

    // Verificar se houve erro na leitura
    if (bytesRead == -1) {
        perror("Erro ao ler o arquivo de origem");
        close(fdSrc);
        close(fdDest);
        return 1;
    }

    // Fechar ambos os arquivos
    if (close(fdSrc) == -1) {
        perror("Erro ao fechar o arquivo de origem");
        close(fdDest);
        return 1;
    }

    if (close(fdDest) == -1) {
        perror("Erro ao fechar o arquivo de destino");
        return 1;
    }

    printf("Arquivo copiado com sucesso!\n");

    return 0;
}
